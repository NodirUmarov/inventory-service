AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for Project

Parameters:
  ProjectName:
    Type: String
    Default: inventory
    Description: The name of the project.
  IpAddress:
    Type: String
    Description: The IP address range that can be used to SSH to the EC2 instances
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: ^(\d{1,3}\.){3}\d{1,3}/\d{1,2}$
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  DBUsername:
    Type: String
    NoEcho: true
    Description: The database admin account username.
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    Type: String
    NoEcho: true
    Description: The database admin account password.
  DBInstanceClass:
    Default: db.m5.large
    Description: DB instance class
    Type: String
    ConstraintDescription: Must select a valid DB instance type.
  DBAllocatedStorage:
    Type: Number
    Default: 10
    Description: The size of the database (Gb).
  DBName:
    Default: inventory_db
    Type: String
    Description: The name of the database

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-Network"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-InternetGateway"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.11.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PublicSubnet-A"

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.12.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PublicSubnet-B"

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-RouteTable"

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref RouteTable

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP, SSH
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-SecGr1"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref IpAddress
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  RDSInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable RDS access from EC2
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-RDSSecGr"

  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "Subnet group for RDS DB instance"
      SubnetIds:
        - !Ref "PublicSubnetA"
        - !Ref "PublicSubnetB"
      Tags:
        - Key: "Name"
          Value: "DBSubnetGroup"

    RDSDBInstance:
      Type: "AWS::RDS::DBInstance"
      Properties:
        DBName: !Ref "DBName"
        AllocatedStorage: !Ref "DBAllocatedStorage"
        DBInstanceClass: !Ref "DBInstanceClass"
        Engine: "postgres"
        MasterUsername: !Ref "DBUsername"
        MasterUserPassword: !Ref "DBPassword"
        VPCSecurityGroups:
          - !Ref "RDSInstanceSecurityGroup"
        DBSubnetGroupName: !Ref "DBSubnetGroup"

  Outputs:
    SecurityGroupId:
      Description: Security Group ID
      Value: !Ref EC2SecurityGroup
      Export:
        Name:
          'Fn::Sub': '${AWS::StackName}-SecGr1'
    VPCId:
      Description: VPC ID
      Value: !Ref VPC
      Export:
        Name:
          'Fn::Sub': '${AWS::StackName}-VPCId'
    InternetGatewayId:
      Description: Internet Gateway ID
      Value: !Ref InternetGateway
    PublicSubnetAId:
      Description: Public Subnet A ID
      Value: !Ref PublicSubnetA
      Export:
        Name:
          'Fn::Sub': '${AWS::StackName}-PublicSubnetAId'
    PublicSubnetBId:
      Description: Public Subnet B ID
      Value: !Ref PublicSubnetB
      Export:
        Name:
          'Fn::Sub': '${AWS::StackName}-PublicSubnetBId'
    RDSInstanceEndpoint:
      Description: Endpoint of the RDS instance
      Value: !GetAtt RDSDBInstance.Endpoint.Address
      Export:
        Name:
          'Fn::Sub': '${AWS::StackName}-RDSInstanceEndpoint'
    DBName:
      Description: Db name
      Value: !Ref DBName
      Export:
        Name:
          'Fn::Sub': '${AWS::StackName}-DBName'